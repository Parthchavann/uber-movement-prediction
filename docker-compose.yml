version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: uberflow-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - ./data:/app/data:ro
      - ./models:/app/models:ro
    networks:
      - uberflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: uberflow-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - NODE_ENV=production
    networks:
      - uberflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: uberflow-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - uberflow-network
    command: redis-server --appendonly yes

  # Optional: Monitoring with Prometheus (disabled for now)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: uberflow-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - uberflow-network

volumes:
  redis_data:
  prometheus_data:

networks:
  uberflow-network:
    driver: bridge